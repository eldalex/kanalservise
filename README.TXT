Тестовое задание.
Дашбоард Kanalservice
Инструкция по запуску:
1)  На машине с Linux + docker-compose сделать git clone проекта
    git clone https://github.com/eldalex/kanalservise.git
2)  зайти в каталог kanalservice
3)  Заполнить .env своими параметрами:
    SECRET_KEY=Опционально, можно не трогать
    DEBUG=Опционально
    ALLOWED_HOSTS=Опционально
    TOKEN= Токен обязателен!
    CHATID= Ваш чат ID. Вы обязательно должны начать диалог с вашим ботом, чтобы он знал о вас. обязательно!
    UPDATEINTERVAL=Интервал обновления данных с гугл таблиц в минутах, обязательно!
    SAMPLESPREADSHEETID=ID документа google таблиц. обязательно!
    SAMPLERANGENAME=Лист1_или_любое_другое_имя_листа. Можно оставить Лист1, либо изменить на другое.

    Переменные для postgre трогать нет необходимости!
4)  ВНИМАНИЕ! ОБЯЗАТЕЛЬНО!
    Закоментировать строку! файл: kanalservise\backend\loader\views.py
    строка 16, она там выделена, не промахнётесь
    #from crontab import scheduler_plan
    Она инициализирует планировщик. НО он в свою очередь обращается к таблицу которой еще не существует
    это приводит к падению. это делается ОДИН РАЗ при первой миграции. после этого строку можно раскоментировать.
5)  Положить файл credentials.json в каталог backend
    Он содержит данные для авторизации на google таблицах
    если у вас нет credentials.json, вам надо его создать
    https://console.cloud.google.com/apis/credentials
    раскоментируйте в файле data_recipient.py вызов функции #print(get_table()) и выполните код pyhton.
    вас закинет на страницу подтверждения google, это не моя прихоть, так работает система безопасности google
    после этого у вас появится token.json. пусть лежит рядом с credentials.
6)  В файле kanalservise\frontend\src\index.js подправьте IP адрес сервера на ваш
6)  запускаем docker-compose up.
    джём пока сбилдятся контейнера и запустятся.
    контейнера будет 4.
    1) Django, это backend
    2) react, это front
    3) tgbot, собственно бот посыльный
    4) postgres, наша БД.
7)  После того как все запустилось, вы уже можете проверить фронт, но всё же надо вернуть планировщика.
    поэтому всё останавиваем ctrl+c
    Убираем комментарий который поставили на пункте 4.
8)  запускаем docker-compose up --build
    можно добавить еще -d, чтобы не следить за логом.
9)  Готово! Вы восхитительны!
    открываем страницы:
    http://ваш_ip:8888/ - посто hello от джанго
    http://ваш_ip:8888/api/table/ - endpoint которые отдаёт данные
    http://ваш_ip:3333/ - Собственно дашбоард
    Дашбоард залочен на автоматическое обновление раз в 10 минут
    правится в kanalservise\frontend\src\components\appGraph\Graph.js, строка 37
    можно нажать на кнопку обновить, тогда обновится сразу. НО! это обновляет только дашборд!
    данные в БД обновляются по таймеру в настройках .env!


    Если лень всё это разворачивать, то вот ссылка на мою копию таблицы:
    https://docs.google.com/spreadsheets/d/1bBL_OY_un_OVGJNRnl7M482qUTZXt9tXRjuu85hSnuk/edit#gid=0
    Доступ к редактированию имеют все у кого есть ссылка.

    Решение захостил у себя, какое то время оно будет доступно:
    У меня обновляется раз в 10 минут. проще всего проверить задрав какой нибудь ценник вверх,
    в течении 10 минут вы увидите как изменятся графики. сообщения в бота вы не получите при этом,
    но я их получаю каждые 10 минут:)

    http://79.133.182.118:8888/
    http://79.133.182.118:8888/api/table/
    http://79.133.182.118:3333/
